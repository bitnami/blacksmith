name: Test - PR

on: pull_request

jobs:
  build_test:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 10.19.0
        uses: actions/setup-node@v1
        with:
          node-version: 10.19.0
      - name: Build
        run: npm install
      - name: Install runtime
        run: npm run install-runtime
      - name: Lint
        run: npm run lint
      - name: Test
        run: script --quiet --return -c "npm run test" /dev/null
      - name: Copy&Paste detection
        run: npm run cpd
      - name: Bundle
        run: npm run bundle
      - name: Archive blacksmith artifact
        uses: actions/upload-artifact@v2
        with:
          name: blacksmith-linux-x64.tar.gz
          path: artifacts/build/blacksmith-linux-x64.tar.gz

  release:
    runs-on: ubuntu-latest

    needs: build_test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-2

      - name: Check version
        run: echo "::set-output name=version::$(echo v$(jq -r .version package.json))"
        id: version
      - name: Get metadata from s3
        run: aws s3 cp ${{ secrets.BUILD_S3_PATH }}/metadata . --dryrun
      - name: Define s3ConfigPath
        run: echo "::set-output name=s3ConfigPath::$(echo "${{ secrets.BUILD_S3_PATH }}/config/${{ steps.version.outputs.version }}"/config.json)"
        id: s3ConfigPath

      - name: Create configuration file
        run: 'echo "${CONFIG_JSON}" > config.json'
        env:
          CONFIG_JSON: ${{secrets.CONFIG_JSON}}
      - name: Upload configuration
        run: aws s3 cp config.json ${{ steps.s3ConfigPath.outputs.s3ConfigPath }} --dryrun

      - name: Previous tag
        run: echo "::set-output name=previous_tag::$(git describe --abbrev=0 --tags)"
        id: previous_tag
      - run: echo ${{ steps.previous_tag.outputs.previous_tag }}
      - run: echo ${{ steps.version.outputs.version }}
      - name: Tag release
        if: steps.version.outputs.version > steps.previous_tag.outputs.previous_tag
        uses: mathieudutour/github-tag-action@v5.5
        id: new_tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version.outputs.version }}
          tag_prefix: ''
          dry_run: true

      - name: Download blacksmith artifact
        uses: actions/download-artifact@v2
        with:
          name: blacksmith-linux-x64.tar.gz
      - name: Define artifactChecksum
        run: echo "::set-output name=artifactChecksum::$(md5sum blacksmith-linux-x64.tar.gz | awk '{print $1}')"
        id: artifactChecksum
      - name: Define artifactName
        run: echo "::set-output name=artifactName::$(echo "blacksmith-${{ steps.version.outputs.version }}-0-linux-x64.tar.gz")"
        id: artifactName

      - name: New metadata
        run: |
          jq '.' metadata | \
          jq ".releases |= . + [\
          $(echo "{\"version\": \"${{ steps.version.outputs.version }}\", \
          \"revision\": \"0\", \
          \"platform\": \"linux-x64\", \
          \"s3Url\": \"${{ steps.s3path.outputs.s3path }}\", \
          \"checksum\": \"${{ steps.artifactChecksum.outputs.artifactChecksum }}\", \
          \"bitnamiConfig\": \"${{ steps.s3ConfigPath.outputs.s3ConfigPath }}\"}" | jq .)]" >> metadata

      - name: Upload release tarball to s3
        run: aws s3 cp blacksmith-linux-x64.tar.gz ${{ secrets.BUILD_S3_PATH }}/releases/${{ steps.artifactName.outputs.artifactName }} --dry-run
      - name: Upload updated metadata to s3
        run: aws s3 cp metadata ${{ secrets.BUILD_S3_PATH }}/metadata --dry-run

      - name: Generate changelog
        if: steps.new_tag.outcome == 'success'
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      # - name: Release
      #   if: steps.new_tag.outcome == 'success'
      #   uses: ncipollo/release-action@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ steps.new_tag.outputs.new_tag }}
      #     name: "${{ github.event.repository.name }}-${{ steps.new_tag.outputs.new_tag }}"
      #     body: |
      #       Release ${{ steps.new_tag.outputs.new_tag }} includes the following commits:

      #       ${{ steps.changelog.outputs.changelog }}
